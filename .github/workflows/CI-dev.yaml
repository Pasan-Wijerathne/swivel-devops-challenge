name: CI Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonar-scan:
    name: Sonar Scan And Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
          
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p .sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path .sonar/scanner

      - name: Build and analyze
        env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"Pasan-Wijerathne_swivel-devops-challenge" /o:"pasan-wijerathne" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
  
  docker-image-scan:
    name: Docker Image Scan
    runs-on: ubuntu-20.04
    needs: sonar-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/pasanpw/swivel-devops-challenge:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'docker.io/pasanpw/swivel-devops-challenge:${{ github.sha }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'UNKNOWN,LOW,MEDIUM,CRITICAL,HIGH'
          output: trivy-report.json

      - name: Display Trivy scan summary
        if: always()
        run: |
          echo "## Trivy Vulnerability Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Check if trivy-report.json exists and is not empty
          if [ -s trivy-report.json ]; then
            # Parse JSON and extract vulnerability details
            jq -r '.Results[] | .Vulnerabilities[] | "\(.VulnerabilityID) - \(.Severity) - \(.PkgName) - \(.InstalledVersion)"' trivy-report.json | head -n 20 >> $GITHUB_STEP_SUMMARY
          else
            echo "No Trivy report found or the report is empty." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload Trivy report artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: trivy-report.json

  docker-build-push:
    name: Docker Build And Push
    runs-on: ubuntu-latest
    needs: [sonar-scan, docker-image-scan]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: pasanpw/swivel-devops-challenge:${{ github.sha }}
